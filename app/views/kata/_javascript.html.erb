
<% # NB: I've tried putting the contents of this file into -%>
<% #     public/javascripts/application.js but it only works here -%>

<script language="javascript" type="text/javascript">

var move = false;

function getCaretPos(control) 
{
  var caretPos = 0;
  // IE Support
  // todo - put back jeremy
  // if (document.selection) 
  // {
  //   control.focus();
  //   var sel = document.selection.createRange();
  //   sel.moveStart('character', -control.value.length);
  //   caretPos = sel.text.length;
  // }
  // // Firefox support
  // else if (control.selectionStart || control.selectionStart == '0')
  //   caretPos = control.selectionStart;

  return caretPos;
}

function setCaretPos(control, pos)
{
  // todo - put back jeremy
  // if (control.setSelectionRange)
  // {
  //   control.focus();
  //   control.setSelectionRange(pos, pos);
  // }
  // else if (control.createTextRange) 
  // {
  //   var range = control.createTextRange();
  //   range.collapse(true);
  //   range.moveEnd('character', pos);
  //   range.moveStart('character', pos);
  //   range.select();
  // }
}

function createTextAreaWithLineNumbers(id, tab)
{
  var el = document.createElement('TEXTAREA');
  var ta = document.getElementById(id);
       
  var string = '';
  for (var no = 1; no < 999; no++) {
    if (string.length > 0) 
      string += '\r\n';
    string += no;
  }
       
  el.setAttribute('readonly', 'true');  
  el.className      = 'textarea_with_line_numbers';
  el.style.height   = (ta.offsetHeight-3) + "px";
  el.style.position = 'absolute';
  el.style.overflow = 'hidden';
  el.style.textAlign = 'right';
  el.style.width    = '35px';
  el.style.paddingRight = '0.2em';
  el.innerHTML      = string;  // Firefox renders \n linebreak
  el.innerText      = string;  // IE6 renders \n line break
  el.value          = string;  // Safari
  el.style.zIndex   = 0;
  ta.tab = tab;
  ta.style.zIndex   = 1;
  ta.style.position = 'relative';
  ta.parentNode.insertBefore(el, ta.nextSibling);
  setLine();
  ta.focus();
       
  ta.onscroll     = function() { setLine(); }
  ta.onkeydown    = function() { setLine(); }
  ta.onmousedown  = function() { setLine(); move=true; }
  ta.onmouseup    = function() { setLine(); move=false; }
  ta.onmousemove  = function() { if (move) { setLine(); } }
             
  function setLine() {
    el.scrollTop   = ta.scrollTop;
    el.style.top   = (ta.offsetTop) + "px";
    el.style.left  = (ta.offsetLeft - 37) + "px";
  }
}

function getFilenameTr(filename)
{
  var input = document.getElementById('radio_' + filename);
  var div = input.parentNode;
  var td = div.parentNode;
  var tr = td.parentNode;
  return tr;
}

function renameFile(filename)
{
  // Save editor into its hidden textarea so we can
  // just use hidden textareas in code below
  $(current_filename).val($('#editor').val());

  var newname = prompt("Rename " + filename + " to: ", "").trim();
  if (newname == null)
    return; // Cancelled

  if (newname == "") 
  {
    alert("Nothing entered: rename abandoned");
    return;
  }
   
  if (fileAlreadyExists(newname))
  {
    alert("CyberDojo cannot rename " +
           filename + " to " + newname +
          "\nbecause a file called " +
           newname +
          " already exists.");
    return; // Cancelled
  }

  // rename hidden textarea by appending new one...
  var old_ta = $(document.getElementById(filename));
  old_ta.attr("id", newname);

  // change name in $('#visible_filenames_container')
  var current = $('#visible_filenames_container').val();
  current = current.replace(';'+filename+";", ";"+newname+";");
  $('#visible_filenames_container').val(current);

  // change name in file-list
  $(document.getElementById("file_row_" + filename)).remove();
  addFilenameToList(newname);

  // if we are renaming the current file then reselect in the file-list
  if (filename == current_filename)
  {
    current_file = newname;
    loadFile(newname);
  }
  // make sure renamed file-entry has drop-down menu
  setupFileEntryMenu();
}

function deleteFile(filename)
{
  if (!confirm("Click OK to delete " + filename))
    return; // Cancelled

  // remove from file-list 
  $(document.getElementById("file_row_" + filename)).remove();

  // remove hidden textarea
  $(document.getElementById(filename)).remove();

  // remove from visible_filenames_container
  var current = $('#visible_filenames_container').val();
  current = current.replace(';'+filename+";", ";");
  $('#visible_filenames_container').val(current);

  // if deleted file is current file then load kata.sh
  // which is always available as it cannot be renamed or deleted
  if (filename == current_filename) 
  {
    // disable auto saveCurrentFile() call in loadFile()
    current_filename = false;
    loadFile('kata.sh');
  }
}

$(function() {
  <% if !@kata.readonly -%>
    setupFileEntryMenu();
  <% end -%>
  loadFile('kata.sh');
})

function setupFileEntryMenu()
{
  $("#file-list label").contextMenu({
      menu: "file_menu"
  }, function(action, element, pos) {
    console.debug("fire", action, element, pos)
      switch(action) {
        case "rename":
          renameFile(element.html());
          break;
        case "delete":
          deleteFile(element.html());
          break;
      }    
  });
}

var current_filename = false;

function saveCurrentFile()
{
  if (current_filename) 
  {
    var current = $('#editor').val();
    $(document.getElementById(current_filename)).val(current);
    // Save cursor position
    var pos = getCaretPos(document.getElementById('editor'));
    var ta = $(current_filename);
    ta.attr('cursorPos', pos);
  }
}

function loadFile(name)
{
  console.debug("load file called w/ " + name)
  saveCurrentFile();
  var saved = $(document.getElementById(name));  // file name may have dots and cause jquery to barf
  var editor = $('#editor');
  editor.val(saved.val());
  // Set cursor position
  var pos = saved.attr('cursorPos');
  setCaretPos(editor, pos);

  current_filename = name;
  document.getElementById('radio_' + name).checked = true;
}

function preRunTests()
{
  saveCurrentFile();
  $('#run_tests_spinner').show();
}

function postRunTests()
{
   $('#run_tests_spinner').hide();
}

function isElement(n)
{
  return n.nodeType == 1;
}

function firstElement(e)
{
  var children = e.childNodes;
  for (var i in children)
  {
    var item = children[i];
    if (isElement(item))
      return item;
  }
  return null;
}

function compare(left, right) 
{
  left = left.toLowerCase();
  right = right.toLowerCase();
  if (left < right)
    return -1;
  else if (left > right)
    return 1;
  else
    return 0; // should never happen!
}

function sortFileList()
{
  var list = $('#file-list')
  var rows = list.find('tr');

  rows.sort(function(left,right) {
    return compare($(left).find('label').html(), $(right).find('label').html());
  });

  rows.each(function() {
    list.append(this);
  })
}

function fileAlreadyExists(filename)
{
  var filenames = $('#visible_filenames_container').val().trim();
  return filenames.split(";").indexOf(filename) != -1;
}

function addFilenameToList(filename)
{
  $('#file-list').append(
    $('<tr/>').attr("id", "file_row_" + filename).append(
      $('<td/>').append(
        $('<div id="radioFilename" title="Right-click=rename/delete"/>')
          .click(function() { loadFile(filename); })
          .append($('<input type="radio"/>').attr({
            id:"radio_" + filename, 
            name:"radio_filename", 
            value:filename }))
          .append("<label>" + filename + "</label>"))));

  sortFileList();
}

function newFile()
{
  var filename = prompt("Enter the new file's name: ", "").trim();
  if (filename == null)
    return; // Cancelled

  if (filename == "") 
  {
    alert("Nothing entered: new-file abandoned");
    return;
  }

  if (fileAlreadyExists(filename))
  {
    alert("CyberDojo cannot create a file called " +
           filename + 
          " because one already exists.");
    return; // Cancelled
  }

  // Create new hidden textarea (to save to before submitting)
  $('#visible_files_container').append($('<textarea/>').attr({id:filename, name:filename}));
  
  // Make the new filename visible in the file-manager list
  addFilenameToList(filename);
  
  // Make its name available to rails
  var filenames = $('#visible_filenames_container').val().trim() + filename + ";";
  $('#visible_filenames_container').val(filenames);
  
  setupFileEntryMenu();
}

</script>

